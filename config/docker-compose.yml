services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres-container
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DBNAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DBNAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - bot_net
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - bot_net
  fastapi:
    image: asdfrewqha/donormate:latest
    container_name: fastapi-container
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8000:8000"
    restart: unless-stopped
    networks:
      - bot_net
  aiobot:
    image: asdfrewqha/donormate_bot:latest
    container_name: aiobot-container
    env_file:
      - .env
    depends_on:
      - fastapi
      - rabbitmq
    networks:
      - bot_net
  celery:
    image: asdfrewqha/donormate:latest
    container_name: celery-container
    command: celery -A app.core.celery_app worker --loglevel=info
    env_file:
      - .env
    depends_on:
      - fastapi
      - rabbitmq
    restart: unless-stopped
    networks:
      - bot_net
    nginx:
      image: nginx:latest
      container_name: nginx-container
      ports:
        - "80:80"
      volumes:
        - ./nginx.conf:/etc/nginx/nginx.conf:ro
      depends_on:
        - fastapi
      networks:
        - bot_net

volumes:
  postgres_data:

networks:
  bot_net:
    driver: bridge